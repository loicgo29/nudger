Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-22.04"
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.ssh.insert_key = false

  # Port SSH personnalisÃ©
  config.vm.network :forwarded_port, guest: 22, host: 50222, id: "ssh", auto_correct: false

  # Configuration QEMU
  config.vm.provider "qemu" do |qe|
    qe.qemu_dir = "/usr/bin/"
    qe.arch = "x86_64"
    qe.memory = "2048"
    qe.smp = "4"
    qe.machine = "q35"
    qe.cpu = "max"
    qe.net_device = "virtio-net-pci"
  end

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  # ðŸ§± Brique 1 : Mise Ã  jour systÃ¨me
  config.vm.provision "shell", name: "update_system", inline: <<~SHELL
    echo "[1/6] Mise Ã  jour du systÃ¨me"
    sudo apt-get update -qq
    sudo apt-get upgrade -yq
  SHELL

  # ðŸ§± Brique 2 : Installation des dÃ©pendances systÃ¨me
  config.vm.provision "shell", name: "install_base_dependencies", inline: <<~SHELL
    echo "[2/6] Installation des paquets de base"
    sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq \
      python3-pip \
      python3-venv \
      git \
      sshpass \
      libssl-dev \
      libffi-dev
  SHELL

  # ðŸ§± Brique 3 : CrÃ©ation de lâ€™environnement Python dÃ©diÃ© Ã  Ansible
  config.vm.provision "shell", name: "create_ansible_venv", inline: <<~SHELL
    echo "[3/6] CrÃ©ation de l'environnement virtuel Ansible"
    sudo python3 -m venv /opt/ansible_venv
    sudo /opt/ansible_venv/bin/pip install --upgrade pip wheel
  SHELL

  # ðŸ§± Brique 4 : Installation d'Ansible et outils
  config.vm.provision "shell", name: "install_ansible_stack", inline: <<~SHELL
    echo "[4/6] Installation d'Ansible et des outils"
    sudo /opt/ansible_venv/bin/pip install \
      ansible-core==2.15.3 \
      ansible-lint==6.22.1 \
      molecule==5.1.0 \
      passlib
  SHELL

  # ðŸ§± Brique 5 : Configuration globale Ansible
  config.vm.provision "shell", name: "setup_ansible_cfg", inline: <<~SHELL
    echo "[5/6] Configuration Ansible"
    sudo mkdir -p /etc/ansible
    echo -e "[defaults]\ninterpreter_python = /opt/ansible_venv/bin/python3\nhost_key_checking = False" | sudo tee /etc/ansible/ansible.cfg > /dev/null
    sudo ln -sf /opt/ansible_venv/bin/ansible* /usr/local/bin/
  SHELL

  # ðŸ§± Brique 6 : ExÃ©cution du playbook (si prÃ©sent)
  config.vm.provision "shell", name: "run_ansible_playbook", inline: <<~SHELL
    echo "[6/6] ExÃ©cution du playbook Ansible"
    if [ -f /vagrant/provision.yml ]; then
      sudo /opt/ansible_venv/bin/ansible-playbook -i /vagrant/.vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory -v /vagrant/provision.yml
    else
      echo "Aucun playbook 'provision.yml' trouvÃ©, Ã©tape ignorÃ©e."
    fi
  SHELL
end
