---
# --- Derive apiserver_host_global if missing ---
- name: Get cluster server URL from admin kubeconfig (only if needed)
  ansible.builtin.shell: |
    set -euo pipefail
    kubectl config view --kubeconfig="{{ containerd_kubeconfig_admin_path }}" --minify \
      -o jsonpath='{.clusters[0].cluster.server}'
  args: { executable: /bin/bash }
  register: _cluster_server_url_from_kubeconfig
  changed_when: false
  when:
    - apiserver_host_global is not defined
    - inventory_hostname == groups['k8s_masters'][0]
  become: true

- name: Derive apiserver_host_global (fallback to node IP)
  ansible.builtin.set_fact:
    apiserver_host_global: >-
      {{
        (
          _cluster_server_url_from_kubeconfig.stdout | default('', true)
          | regex_replace('^https?://', '')
          | regex_replace(':.*$', '')
        )
        | default(ansible_default_ipv4.address, true)
      }}
  when:
    - apiserver_host_global is not defined
    - inventory_hostname == groups['k8s_masters'][0]

# Avant d’appliquer Flannel : wait /readyz sur l’host réel
- name: Wait /readyz on apiserver (from kubeconfig)
  ansible.builtin.shell: |
    set -euo pipefail
    H="{{ apiserver_host_global }}"
    for i in $(seq 1 60); do
      if curl -sf --cacert /etc/kubernetes/pki/ca.crt \
         --cert   /etc/kubernetes/pki/apiserver-kubelet-client.crt \
         --key    /etc/kubernetes/pki/apiserver-kubelet-client.key \
         "https://${H}:6443/readyz" >/dev/null 2>&1; then
        exit 0
      fi
      sleep 2
    done
    exit 1
  args: { executable: /bin/bash }
  changed_when: false
  become: true
  when: inventory_hostname == groups['k8s_masters'][0]
- name: Ensure kube-apiserver is listening on 6443 right now
  ansible.builtin.shell: ss -ltn | awk '{print $4}' | grep -qE '(^|:|])6443$'
  args: { executable: /bin/bash }
  register: apisock
  changed_when: false
  retries: 20
  delay: 2
  until: apisock.rc == 0
  become: true
  when: inventory_hostname == groups['k8s_masters'][0]
- name: Render kube-flannel namespace YAML
  ansible.builtin.command:
    argv: ["kubectl","create","ns","kube-flannel","--dry-run=client","-o","yaml"]
  environment: { KUBECONFIG: "{{ containerd_kubeconfig_admin_path }}" }
  register: ns_yaml
  changed_when: false
  when: inventory_hostname == groups['k8s_masters'][0]

- name: Apply kube-flannel namespace (idempotent)
  ansible.builtin.command:
    argv: ["kubectl","apply","-f","-"]
  args:
    stdin: "{{ ns_yaml.stdout }}"
  environment: { KUBECONFIG: "{{ containerd_kubeconfig_admin_path }}" }
  register: ns_apply
  changed_when: "'created' in ns_apply.stdout or 'configured' in ns_apply.stdout"
  when: inventory_hostname == groups['k8s_masters'][0]

# Flannel CNI install (after kubeadm init)
- name: Apply Flannel CNI (use kubeconfig server, retries + readyz)
  ansible.builtin.shell: |
    set -euo pipefail
    S="$(kubectl config view --kubeconfig="{{ containerd_kubeconfig_admin_path }}" --minify -o jsonpath='{.clusters[0].cluster.server}')"
    H="$(printf '%s' "$S" | sed -E 's#^https?://##; s#:.*$##')"

    for i in $(seq 1 10); do
      if curl -sf --cacert /etc/kubernetes/pki/ca.crt \
         --cert   /etc/kubernetes/pki/apiserver-kubelet-client.crt \
         --key    /etc/kubernetes/pki/apiserver-kubelet-client.key \
         "https://${H}:6443/readyz" >/dev/null 2>&1; then
        if kubectl --kubeconfig "{{ containerd_kubeconfig_admin_path }}" \
                   apply --validate=false \
                   -f "{{ flannel_manifest_url }}"; then
          exit 0
        fi
      fi
      sleep 3
    done
    exit 1
  args: { executable: /bin/bash }
  register: flannel_apply
  changed_when: "'created' in flannel_apply.stdout or 'configured' in flannel_apply.stdout"
  become: true
  when: inventory_hostname == groups['k8s_masters'][0]

- name: Wait for Flannel DaemonSet to be ready
  ansible.builtin.command: >
    kubectl -n kube-flannel rollout status ds/kube-flannel-ds --timeout={{ flannel_wait_timeout }}
            --server https://{{ apiserver_host_global }}:6443 \
            --insecure-skip-tls-verify
            --kubeconfig {{ containerd_kubeconfig_admin_path }}
  register: flannel_rollout
  changed_when: false
  retries: 3
  delay: 20
  until: flannel_rollout.rc == 0
  become: true
  when: inventory_hostname == groups['k8s_masters'][0]
