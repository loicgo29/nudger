# ClusterConfiguration
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
# Utilise la version réellement installée (ex: v1.31.12),
# sinon retombe sur ta cible (ex: v1.31.1)
kubernetesVersion: "{{ kubeadm_semver | default(k8s_release) }}"
controlPlaneEndpoint: "{{ apiserver_endpoint }}"
networking:
  podSubnet: "{{ pod_network_cidr }}"
  serviceSubnet: "{{ service_subnet | default('10.96.0.0/12') }}"

apiServer:
  # v1beta4 attend une liste d'args structurés
  # Tu peux aussi SUPPRIMER complètement ce bloc (kubeadm met déjà Node,RBAC par défaut),
  # mais si tu veux l’expliciter :
  extraArgs:
    - name: authorization-mode
      value: "Node,RBAC"
  # SANs pour le cert de l’API server
  certSANs:
    - "127.0.0.1"
    - "{{ ansible_default_ipv4.address }}"
    - "{{ inventory_hostname }}"
    - "{{ ansible_fqdn | default(inventory_hostname) }}"

---
# InitConfiguration
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{ ansible_default_ipv4.address }}"
nodeRegistration:
  criSocket: unix:///var/run/containerd/containerd.sock
  # v1beta4 attend aussi une liste pour kubeletExtraArgs
  kubeletExtraArgs:
    - name: cgroup-driver
      value: "systemd"

---
# KubeletConfiguration (groupe kubelet.config.k8s.io)
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: "systemd"

