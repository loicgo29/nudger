# ----------------------------
# Init master
# ----------------------------

- name: Check if cluster already initialized
  ansible.builtin.stat:
    path: "{{ kubeconfig_admin_path }}"
  register: kubeadm_config
  become: true

- name: Default apiserver_endpoint if undefined
  ansible.builtin.set_fact:
    apiserver_endpoint: "{{ ansible_default_ipv4.address }}:6443"
  when: apiserver_endpoint is not defined or (apiserver_endpoint | trim) == ''

- name: Render kubeadm config
  ansible.builtin.template:
    src: kubeadm-config.j2
    dest: /root/kubeadm-config.yaml
    mode: '0644'
  when: inventory_hostname == groups['k8s_masters'][0]
  become: true

- name: Initialize control-plane (skip kube-proxy)
  ansible.builtin.command: kubeadm init --config=/root/kubeadm-config.yaml --skip-phases=addon/kube-proxy
  args:
    creates: "{{ kubeconfig_admin_path }}"
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - not kubeadm_config.stat.exists
  become: true

- name: Patch probes kube-controller-manager to TCP
  ansible.builtin.replace:
    path: /etc/kubernetes/manifests/kube-controller-manager.yaml
    # (?s) => DOTALL pour matcher sur plusieurs lignes
    regexp: '(?s)livenessProbe:.*?startupProbe:'
    replace: |
      livenessProbe:
        tcpSocket: { port: 10257 }
        initialDelaySeconds: 10
        periodSeconds: 10
        timeoutSeconds: 15
        failureThreshold: 8
      startupProbe:
        tcpSocket: { port: 10257 }
        initialDelaySeconds: 10
        periodSeconds: 10
        timeoutSeconds: 15
        failureThreshold: 24
      startupProbe:
  become: true
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - kubeadm_config.stat.exists

- name: Patch probes kube-scheduler to TCP
  ansible.builtin.replace:
    path: /etc/kubernetes/manifests/kube-scheduler.yaml
    regexp: '(?s)livenessProbe:.*?startupProbe:'
    replace: |
      livenessProbe:
        tcpSocket:
          port: 10259
        initialDelaySeconds: 10
        periodSeconds: 10
        timeoutSeconds: 15
        failureThreshold: 8
      startupProbe:
        tcpSocket:
          port: 10259
        initialDelaySeconds: 10
        periodSeconds: 10
        timeoutSeconds: 15
        failureThreshold: 24
    backup: true
  become: true
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - kubeadm_config.stat.exists

- name: Wait for API server /readyz to return ok
  ansible.builtin.command: >
    curl -sf --cacert /etc/kubernetes/pki/ca.crt
         --cert /etc/kubernetes/pki/apiserver-kubelet-client.crt
         --key /etc/kubernetes/pki/apiserver-kubelet-client.key
         https://127.0.0.1:6443/readyz
  register: apiready
  retries: 30
  delay: 2
  until: apiready.rc == 0
  become: true
  when:
    - inventory_hostname == groups['k8s_masters'][0]
    - not kubeadm_config.stat.exists

