---
# ----------------------------
# Kubernetes APT repo + packages
# ----------------------------

# Best practice: avoid include_vars with relative paths; keep role-scoped defaults
# that can be overridden via group_vars/host_vars or -e on CLI.

- name: Ensure apt keyrings directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  become: true
  tags: ['k8s', 'repo']

# Download upstream ASCII armored Release key.
- name: Download Kubernetes Release key (ASCII)
  ansible.builtin.get_url:
    url: "{{ kubernetes_gpg_key_url }}"
    dest: /tmp/kubernetes-release.asc
    mode: '0644'
  become: true
  tags: ['k8s', 'repo']

# Convert to a binary keyring that apt can use.
# Idempotence: guarded by creates= on the destination keyring file.
- name: Convert Release key to binary keyring
  ansible.builtin.command: >
    gpg --dearmor -o {{ kubernetes_keyring_path }} /tmp/kubernetes-release.asc
  args:
    creates: "{{ kubernetes_keyring_path }}"
  become: true
  tags: ['k8s', 'repo']

- name: Remove temporary ASCII key
  ansible.builtin.file:
    path: /tmp/kubernetes-release.asc
    state: absent
  become: true
  tags: ['k8s', 'repo']

# Clean up legacy list if it exists (older guides used kubernetes.list).
- name: Remove legacy kubernetes.list if present
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/kubernetes.list
    state: absent
  become: true
  tags: ['k8s', 'repo']

# Add the per-minor pkgs.k8s.io repository with our keyring.
- name: Add Kubernetes APT repository (pkgs.k8s.io)
  ansible.builtin.apt_repository:
    repo: "{{ kubernetes_repo }}"
    filename: kubernetes
    state: present
    update_cache: true
  become: true
  tags: ['k8s', 'repo']

# Keep “common” apt prerequisites near where they are used for clarity.
- name: Install common APT dependencies
  ansible.builtin.apt:
    name: "{{ common_apt_dependencies }}"
    state: present
    update_cache: true
  become: true
  tags: ['k8s', 'packages']

# Install kubelet/kubeadm/kubectl from the pinned minor repo.
- name: Install Kubernetes packages
  ansible.builtin.apt:
    name: "{{ kubernetes_packages }}"
    state: present
    update_cache: true
  become: true
  notify: Restart kubelet
  tags: ['k8s', 'packages']

# Holding versions is important: kubeadm/kubelet/kubectl must match.
# This avoids inadvertent upgrades when the repo moves forward.
- name: Hold Kubernetes packages at installed version
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop: "{{ kubernetes_packages }}"
  become: true
  tags: ['k8s', 'packages']

# Ensure kubelet is enabled/running (kubeadm will further configure it later).
- name: Ensure kubelet service is enabled and running
  ansible.builtin.service:
    name: kubelet
    state: started
    enabled: true
  become: true
  tags: ['k8s', 'service']

