# playbooks/users_and_git.yml
- name: Créer les users et cloner leurs dépôts
  hosts: k8s_masters
  become: true
  vars:
    shallow_clone: true      # mets false si tu veux l'historique complet
    enforce_known_hosts: true
  tasks:
    - name: Créer les groupes manquants (optionnel, robuste)
      ansible.builtin.group:
        name: "{{ item }}"
        state: present
      loop: "{{ users_k8s | map(attribute='groups') | flatten | unique }}"
      when: users_k8s | length > 0

    - name: Créer les utilisateurs
      ansible.builtin.user:
        name: "{{ item.name }}"
        groups: "{{ item.groups | default([]) | join(',') }}"
        password: "{{ item.password | default(omit) }}"
        shell: /bin/bash
        create_home: true
      loop: "{{ users_k8s }}"

    - name: Sudo NOPASSWD si demandé
      ansible.builtin.copy:
        dest: "/etc/sudoers.d/{{ item.name }}"
        content: "{{ item.name }} ALL=(ALL) NOPASSWD:ALL\n"
        mode: "0440"
      loop: "{{ users_k8s | selectattr('sudo_nopass', 'defined') | selectattr('sudo_nopass') | list }}"

    - name: Dossier .ssh + authorized_keys
      block:
        - ansible.builtin.file:
            path: "/home/{{ item.name }}/.ssh"
            state: directory
            owner: "{{ item.name }}"
            group: "{{ item.name }}"
            mode: "0700"
        - ansible.builtin.copy:
            dest: "/home/{{ item.name }}/.ssh/authorized_keys"
            content: "{{ item.ssh_public_key | default('') }}"
            owner: "{{ item.name }}"
            group: "{{ item.name }}"
            mode: "0600"
      loop: "{{ users_k8s }}"

    - name: Ajouter github.com au known_hosts (recommandé)
      ansible.builtin.known_hosts:
        path: "/home/{{ item.name }}/.ssh/known_hosts"
        name: "github.com"
        key: "github.com {{ lookup('ansible.builtin.pipe', 'ssh-keyscan -t rsa,ed25519 github.com') }}"
        state: present
      become_user: "{{ item.name }}"
      loop: "{{ users_k8s }}"
      when: enforce_known_hosts

    - name: Créer les dossiers de destination pour les repos
      ansible.builtin.file:
        path: "{{ repo.dest }}"
        state: directory
        owner: "{{ item.name }}"
        group: "{{ item.name }}"
        mode: "0755"
      loop: "{{ users_k8s }}"
      loop_control:
        loop_var: item
      vars:
        repos: "{{ item.git_repos | default([]) }}"
      with_items: "{{ [] }}"  # no-op, nécessaire pour l’ordre des tâches
      when: false             # on fait la création dans la tâche suivante (voir block)

    - name: Cloner / mettre à jour les dépôts de chaque user
      vars:
        repos: "{{ item.git_repos | default([]) }}"
      block:
        - name: "Créer dossier du repo {{ repo.dest }}"
          ansible.builtin.file:
            path: "{{ repo.dest }}"
            state: directory
            owner: "{{ item.name }}"
            group: "{{ item.name }}"
            mode: "0755"
          loop: "{{ repos }}"
          loop_control:
            loop_var: repo

        - name: "Git clone/pull {{ repo.repo }} -> {{ repo.dest }}"
          ansible.builtin.git:
            repo: "{{ repo.repo }}"
            dest: "{{ repo.dest }}"
            version: "{{ repo.version | default('main') }}"
            update: true
            force: false
            depth: "{{ 1 if shallow_clone else omit }}"
            submodules: "{{ repo.submodules | default(true) }}"
            accept_hostkey: true
          become_user: "{{ item.name }}"
          environment:
            GIT_SSH_COMMAND: "ssh -o ForwardAgent=yes"
          loop: "{{ repos }}"
          loop_control:
            loop_var: repo
          when: repo.repo is defined and repo.dest is defined
      loop: "{{ users_k8s }}"

