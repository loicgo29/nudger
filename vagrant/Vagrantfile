Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-22.04"
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.ssh.insert_key = false

  # RÃ©duction du bruit dans les logs
  config.cache.auto_detect = true

  # Script dâ€™installation de base
  common_provision = <<-SHELL
    sudo apt-get update -qq
    sudo apt-get install -y -qq unzip iftop curl software-properties-common git vim tree net-tools telnet
    sudo sed -i 's/^#\\?ChallengeResponseAuthentication .*/ChallengeResponseAuthentication yes/' /etc/ssh/sshd_config
    sudo systemctl restart sshd
  SHELL

  # IPs et ports dÃ©finis pour chaque VM
  NODES = [
    { hostname: "kubm1", ip: "192.168.26.10", cpus: 2, mem: 2048, ssh_port: 50210 },
  # { hostname: "kubw1", ip: "192.168.26.13", cpus: 2, mem: 1024, ssh_port: 50211 },
  # { hostname: "kubw2", ip: "192.168.26.14", cpus: 2, mem: 1024, ssh_port: 50212 }
  ]

  # EntrÃ©es /etc/hosts pour que les VMs se connaissent
  hosts_entries = NODES.map { |n| "#{n[:ip]} #{n[:hostname]}" }.join("\n")

  NODES.each do |node|
    config.vm.define node[:hostname] do |vm|
      vm.vm.hostname = node[:hostname]
      vm.vm.network "private_network", ip: node[:ip]
      vm.vm.network :forwarded_port, guest: 22, host: node[:ssh_port], id: "ssh", auto_correct: false

      # Provider QEMU
      vm.vm.provider "qemu" do |qemu|
        qemu.qemu_dir = "/usr/bin/"
        qemu.arch = "x86_64"
        qemu.memory = node[:mem]
        qemu.smp = node[:cpus]
        qemu.machine = "q35"
        qemu.cpu = "max"
        qemu.net_device = "virtio-net-pci"
      end

      # Provision de base (packages utiles)
      vm.vm.provision "shell", inline: common_provision

      # Ajout de la clÃ© SSH de l'utilisateur Ã  root + vagrant
      vm.vm.provision "shell" do |s|
        ssh_pub_key = File.read("#{Dir.home}/.ssh/id_rsa.pub").strip
        s.inline = <<-SHELL
          mkdir -p /root/.ssh /home/vagrant/.ssh
          echo "#{ssh_pub_key}" >> /root/.ssh/authorized_keys
          echo "#{ssh_pub_key}" >> /home/vagrant/.ssh/authorized_keys
          chown vagrant:vagrant /home/vagrant/.ssh/authorized_keys
        SHELL
      end

      # Ajout de toutes les entrÃ©es /etc/hosts pour la rÃ©solution entre nodes
      vm.vm.provision "shell", inline: <<-SHELL
        echo "#{hosts_entries}" | tee -a /etc/hosts > /dev/null
      SHELL
    end
  end

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  # ðŸ§± Brique 1 : Mise Ã  jour systÃ¨me
  config.vm.provision "shell", name: "update_system", inline: <<~SHELL
    echo "[1/6] Mise Ã  jour du systÃ¨me"
    sudo apt-get update -qq
    sudo apt-get upgrade -yq
  SHELL

  # ðŸ§± Brique 2 : Installation des dÃ©pendances systÃ¨me
  config.vm.provision "shell", name: "install_base_dependencies", inline: <<~SHELL
    echo "[2/6] Installation des paquets de base"
    sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq \
      python3-pip \
      python3-venv \
      git \
      sshpass \
      libssl-dev \
      libffi-dev
  SHELL

  # ðŸ§± Brique 3 : CrÃ©ation de lâ€™environnement Python dÃ©diÃ© Ã  Ansible
  config.vm.provision "shell", name: "create_ansible_venv", inline: <<~SHELL
    echo "[3/6] CrÃ©ation de l'environnement virtuel Ansible"
    sudo python3 -m venv /opt/ansible_venv
    sudo /opt/ansible_venv/bin/pip install --upgrade pip wheel
  SHELL

  # ðŸ§± Brique 4 : Installation d'Ansible et outils
  config.vm.provision "shell", name: "install_ansible_stack", inline: <<~SHELL
    echo "[4/6] Installation d'Ansible et des outils"
    sudo /opt/ansible_venv/bin/pip install \
      ansible-core==2.15.3 \
      ansible-lint==6.22.1 \
      molecule==5.1.0 \
      passlib
  SHELL

  # ðŸ§± Brique 5 : Configuration globale Ansible
  config.vm.provision "shell", name: "setup_ansible_cfg", inline: <<~SHELL
    echo "[5/6] Configuration Ansible"
    sudo mkdir -p /etc/ansible
    echo -e "[defaults]\ninterpreter_python = /opt/ansible_venv/bin/python3\nhost_key_checking = False" | sudo tee /etc/ansible/ansible.cfg > /dev/null
    sudo ln -sf /opt/ansible_venv/bin/ansible* /usr/local/bin/
  SHELL
end
