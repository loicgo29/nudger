---
# ----------------------------
# Install Docker Engine (from Docker CE upstream repos)
# ----------------------------

- name: Ensure apt keyrings directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
  become: true
  tags: ['docker', 'repo']

# Fetch Docker's official GPG key
- name: Download Docker GPG key
  ansible.builtin.get_url:
    url: "{{ docker_gpg_url }}"
    dest: /tmp/docker.gpg.asc
    mode: '0644'
  become: true
  tags: ['docker', 'repo']

# Convert ASCII armored GPG key to binary keyring
- name: Convert Docker GPG key to keyring format
  ansible.builtin.command: >
    gpg --dearmor -o {{ docker_gpg_path }} /tmp/docker.gpg.asc
  args:
    creates: "{{ docker_gpg_path }}"
  become: true
  tags: ['docker', 'repo']

- name: Remove temporary Docker ASCII key
  ansible.builtin.file:
    path: /tmp/docker.gpg.asc
    state: absent
  become: true
  tags: ['docker', 'repo']

# Add Docker apt repo
- name: Add Docker APT repository
  ansible.builtin.apt_repository:
    repo: "{{ docker_repo }}"
    filename: docker
    state: present
    update_cache: true
  become: true
  tags: ['docker', 'repo']

# Install required apt dependencies (curl, gnupg, etc.)
- name: Install Docker dependencies
  ansible.builtin.apt:
    name: "{{ docker_dependencies }}"
    state: present
    update_cache: true
  become: true
  tags: ['docker', 'packages']

- name: Install Docker packages
  ansible.builtin.apt:
    name: "{{ docker_packages }}"
    state: present
    update_cache: true
  become: true
  notify: Restart docker
  tags: ['docker', 'packages']

# Ensure docker service is enabled and started
- name: Ensure Docker service is running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true
  become: true
  tags: ['docker', 'service']

